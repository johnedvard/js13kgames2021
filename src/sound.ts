import { zzfx, zzfxP, zzfxM, zzfxX} from './zzfx';

let myAudioNode: AudioBufferSourceNode = null;
let isPlaying = false;
let audioContext: AudioContext = zzfxX;
export const playDead = () => {
  zzfx(...[1.1,,229,,,.31,4,2.38,-0.7,-3,,,,.4,,.2,,.88,.01]); // Hit 111
};
export const playBulletExplotion = () => {
  zzfx(...[1.75,,334,,.13,.98,4,.79,.9,,,,,.9,,.4,.29,.84,.01,.49]); // Explosion 121
}
export const playSong = () => {
  try{
    isPlaying = true;
    if(myAudioNode && audioContext){
      audioContext.resume();
      return;
    }
    const song = [[[.7,0,22,,.07,.07,2,0,,,.5,.01],[.8,0,2100,,,.2,3,3,,,-400,,,2],[2,0,4e3,,,.03,2,1.25,,,,,.02,6.8,-.3,,.5],[.9,0,143,,,.35,3],[.7,0,22,,.07,.5,2,0,,,.5,.01]],[[[3,-1,9,9,7,9,,,,,9,9,7,9,,,,,9,9,7,9,,,,,9,9,7,9,,12,14,16,9,9,7,5,,,,,5,5,4,2,,,,,5,5,4,2,,2,,2,,4,,5,,7,,8],[,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],[,-1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],[,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]],[[3,-1,9,9,7,9,,,,,9,9,7,9,,,,,9,9,7,9,,,,,9,9,7,9,,12,14,16,9,9,7,5,,,,,5,5,4,2,,,,,5,5,4,2,,2,,2,,4,,5,,7,,8],[,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],[1,-1,1,,,,,,,,9,,,,,,,,1,,,,,,,,9,,,,,,,,1,,,,,,,,9,,,,,,,,1,,,,,,,,9,,9,,9,,,,],[2,1,7,,7,,7,,7,,7,,7,,7,,7,,9,,9,,9,,9,,9,,9,,9,,9,,7,,7,,7,,7,,7,,7,,7,,7,,9,,9,,9,7,9,7,9,7,9,7,9,7,9,7]],[[3,-1,9,9,7,9,,,,,9,9,7,9,,,,,9,9,7,9,,,,,9,9,7,9,,12,14,16,9,9,7,5,,,,,5,5,4,2,,,,,5,5,4,2,,2,,2,,4,,5,,7,,8],[,1,,,29,,,,29,,,,29,,,,29,,,,29,,,,29,,,,29,,,,24,,,,24,,,,24,,,,22,,,,22,,,,22,,,,22,,,,22,,,,22,,],[1,-1,1,,,,,,,,9,,,,,,,,1,,,,,,,,9,,,,,,,,1,,,,,,,,9,,,,,,,,1,,,,,,,,9,,9,,9,,,,],[2,1,7,,7,,7,,7,,7,,7,,7,,7,,9,,9,,9,,9,,9,,9,,9,,9,,7,,7,,7,,7,,7,,7,,7,,7,,9,,9,,9,7,9,7,9,7,9,7,9,7,9,7]],[[3,-1,9,,9,,7,,9,,,,9,,9,,7,,9,,11,,12,,,,9,,9,,9,,12,,14,,14,,14,,12,,14,,14,,,,12,,14,,12,,,,16,,,,17,,,,,,],[4,1,29,,,,,,,,29,,,,,,,,29,,,,32,,,,34,,,,,,,,34,,,,,,,,34,,,,,,,,34,,,,,,,,34,,,,29,,,,],[1,-1,,,,,7,,,,,,,,9,,,,,,,,7,,,,,,,,9,,,,,,,,7,,,,,,,,9,,,,,,,,11,,,,,,,,9,,,,],[2,1,7,,7,,7,,7,,7,,7,,7,,7,,9,,9,,9,,9,,9,,9,,9,,9,,7,,7,,7,,7,,7,,7,,7,,7,,9,,9,,9,7,9,7,9,7,9,7,9,7,9,7]]],[0,1,2,2,2,3,2,2,2,3,2,2,2,3,2,2,2,3,2,2,2,3,2,2,2,3],,{}];
    let mySongData = zzfxM(...song);
    
    myAudioNode = zzfxP(...mySongData);
    myAudioNode.loop = true;
  } catch {
    console.error('cannot play music');
  } finally {

  }
  return;
}

export const stopSong = () => {
  isPlaying = false;
  if(audioContext){
    audioContext.suspend();
  }
}
export const toggleSond = () => {
  if(isPlaying){
    stopSong();
  } else{
    playSong();
  }
}
